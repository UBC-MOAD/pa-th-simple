""" This test module is set to test the output of an advection scheme given the following input parameters:
"""
from __future__ import division
import numpy as np
import ThPa2D

# run for following outputs
time = (0, 0.001, 2, 3, 5, 10)
t = time[0]
T = time[1]
V = 1  
xmin = 0
xmax = 1e6
zmin = 0
zmax = 5e3
nz = 10
nx = 10
ng = 1
g = ThPa2D.FDgrid(nx, nz, ng)
h = ThPa2D.FDgrid(nx, nz, ng)
# chemistry
k_ad, k_de, Q = ThPa2D.k_sorp('Th', xmin, xmax, zmin, zmax, nx, nz)
S = 500
# velocity = u1
u1, flowfig, init = ThPa2D.u_simple(g, h, xmin, xmax, zmin, zmax, nx, nz, V, 'Th')
# velocity = u2
u2, flowfig, init = ThPa2D.u_complex(g, h, xmin, xmax, zmin, zmax, nx, nz, V, 'Th')


def test_g_u1_upwind_adflow():
    g = ThPa2D.FDgrid(nx, nz, ng)
    h = ThPa2D.FDgrid(nx, nz, ng)
    afterg, afterh = ThPa2D.adflow(g, h, t, T, u1, k_ad, k_de, Q, ThPa2D.upwind)

    beforeg = [[ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ,  0.        ,  0.        ,  0.        ,  0.        ],
       [ 0.00023934,  0.00026581,  0.00026581,  0.00026581,  0.00026581,
         0.00026581,  0.00026581,  0.00026581,  0.00026581,  0.00023934],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982,
         0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982]]

    np.testing.assert_allclose(afterg.a, beforeg, rtol=0, atol = 1e-8) 


def test_h_u1_upwind_adflow():
    g = ThPa2D.FDgrid(nx, nz, ng)
    h = ThPa2D.FDgrid(nx, nz, ng)
    afterg, afterh = ThPa2D.adflow(g, h, t, T, u1, k_ad, k_de, Q, ThPa2D.upwind)

    beforeh = [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00],
       [  1.19225355e-06,   1.45579434e-06,   1.45579435e-06,
          1.45579435e-06,   1.45579435e-06,   1.45579433e-06,
          1.45579432e-06,   1.45579433e-06,   1.45579434e-06,
          1.19225355e-06],
       [  6.00847926e-07,   7.34217655e-07,   7.34217641e-07,
          7.34217641e-07,   7.34217652e-07,   7.34217667e-07,
          7.34217678e-07,   7.34217677e-07,   7.34217664e-07,
          6.00847933e-07],
       [  5.98896935e-07,   7.31620949e-07,   7.31620944e-07,
          7.31620945e-07,   7.31620951e-07,   7.31620959e-07,
          7.31620965e-07,   7.31620965e-07,   7.31620961e-07,
          5.98896945e-07],
       [  5.98891666e-07,   7.31613353e-07,   7.31613348e-07,
          7.31613350e-07,   7.31613357e-07,   7.31613366e-07,
          7.31613373e-07,   7.31613374e-07,   7.31613370e-07,
          5.98891680e-07],
       [  5.98891654e-07,   7.31613334e-07,   7.31613331e-07,
          7.31613334e-07,   7.31613342e-07,   7.31613351e-07,
          7.31613357e-07,   7.31613358e-07,   7.31613352e-07,
          5.98891669e-07],
       [  5.98891656e-07,   7.31613336e-07,   7.31613338e-07,
          7.31613342e-07,   7.31613350e-07,   7.31613357e-07,
          7.31613361e-07,   7.31613359e-07,   7.31613350e-07,
          5.98891668e-07],
       [  5.98891660e-07,   7.31613340e-07,   7.31613342e-07,
          7.31613346e-07,   7.31613352e-07,   7.31613358e-07,
          7.31613359e-07,   7.31613354e-07,   7.31613345e-07,
          5.98891663e-07],
       [  5.98891661e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613345e-07,   7.31613349e-07,   7.31613352e-07,
          7.31613350e-07,   7.31613345e-07,   7.31613342e-07,
          5.98891661e-07],
       [  5.98891661e-07,   5.98891661e-07,   5.98891661e-07,
          5.98891664e-07,   5.98891667e-07,   5.98891669e-07,
          5.98891668e-07,   5.98891663e-07,   5.98891661e-07,
          5.98891661e-07]]

    np.testing.assert_allclose(afterh.a, beforeh, rtol=0, atol = 1e-10) 

def test_g_u2_upwind_adflow():
    g = ThPa2D.FDgrid(nx, nz, ng)
    h = ThPa2D.FDgrid(nx, nz, ng)
    afterg, afterh = ThPa2D.adflow(g, h, t, T, u2, k_ad, k_de, Q, ThPa2D.upwind)

    beforeg = [[ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ,  0.        ,  0.        ,  0.        ,  0.        ],
       [ 0.00023934,  0.00026581,  0.00026581,  0.00026581,  0.00026581,
         0.00026581,  0.00026581,  0.00026581,  0.00026581,  0.00023934],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982,
         0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982]]

    np.testing.assert_allclose(afterg.a, beforeg, rtol=0, atol = 1e-8)

def test_h_u2_upwind_adflow():
    g = ThPa2D.FDgrid(nx, nz, ng)
    h = ThPa2D.FDgrid(nx, nz, ng)
    afterg, afterh = ThPa2D.adflow(g, h, t, T, u2, k_ad, k_de, Q, ThPa2D.upwind)

    beforeh = [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00],
       [  1.19225354e-06,   1.45579433e-06,   1.45579436e-06,
          1.45579436e-06,   1.45579434e-06,   1.45579434e-06,
          1.45579435e-06,   1.45579434e-06,   1.45579434e-06,
          1.19225355e-06],
       [  6.00847947e-07,   7.34217681e-07,   7.34217673e-07,
          7.34217673e-07,   7.34217659e-07,   7.34217659e-07,
          7.34217637e-07,   7.34217659e-07,   7.34217659e-07,
          6.00847930e-07],
       [  5.98896950e-07,   7.31620966e-07,   7.31620964e-07,
          7.31620964e-07,   7.31620955e-07,   7.31620955e-07,
          7.31620943e-07,   7.31620955e-07,   7.31620955e-07,
          5.98896940e-07],
       [  5.98891684e-07,   7.31613374e-07,   7.31613361e-07,
          7.31613361e-07,   7.31613361e-07,   7.31613361e-07,
          7.31613348e-07,   7.31613361e-07,   7.31613361e-07,
          5.98891673e-07],
       [  5.98891672e-07,   7.31613355e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613329e-07,   7.31613342e-07,   7.31613342e-07,
          5.98891661e-07],
       [  5.98891670e-07,   7.31613354e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613336e-07,   7.31613351e-07,   7.31613351e-07,
          5.98891669e-07],
       [  5.98891667e-07,   7.31613349e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613355e-07,   7.31613355e-07,
          5.98891672e-07],
       [  5.98891663e-07,   7.31613344e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613343e-07,   7.31613351e-07,   7.31613351e-07,
          5.98891669e-07],
       [  5.98891663e-07,   5.98891663e-07,   5.98891661e-07,
          5.98891661e-07,   5.98891661e-07,   5.98891661e-07,
          5.98891662e-07,   5.98891669e-07,   5.98891669e-07,
          5.98891669e-07]]

    np.testing.assert_allclose(afterh.a, beforeh, rtol=0, atol = 1e-10)

def test_g_jvec_u1():
        g = ThPa2D.FDgrid(nx, nz, ng)
        h = ThPa2D.FDgrid(nx, nz, ng)
        gjvec, hjvec = ThPa2D.adflow(g, h, t, T, u1, k_ad, k_de, Q, ThPa2D.upwind)

        gup = [[ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ,  0.        ,  0.        ,  0.        ,  0.        ],
       [ 0.00023934,  0.00026581,  0.00026581,  0.00026581,  0.00026581,
         0.00026581,  0.00026581,  0.00026581,  0.00026581,  0.00023934],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982,
         0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982]]


        np.testing.assert_allclose(gjvec.a, gup, rtol=0, atol = 1e-8)


def test_h_jvec_u1():
        g = ThPa2D.FDgrid(nx, nz, ng)
        h = ThPa2D.FDgrid(nx, nz, ng)
        gjvec, hjvec = ThPa2D.adflow(g, h, t, T, u1, k_ad, k_de, Q, ThPa2D.upwind)

        hup = [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00],
       [  1.19225355e-06,   1.45579434e-06,   1.45579435e-06,
          1.45579435e-06,   1.45579435e-06,   1.45579433e-06,
          1.45579432e-06,   1.45579433e-06,   1.45579434e-06,
          1.19225355e-06],
       [  6.00847926e-07,   7.34217655e-07,   7.34217641e-07,
          7.34217641e-07,   7.34217652e-07,   7.34217667e-07,
          7.34217678e-07,   7.34217677e-07,   7.34217664e-07,
          6.00847933e-07],
       [  5.98896935e-07,   7.31620949e-07,   7.31620944e-07,
          7.31620945e-07,   7.31620951e-07,   7.31620959e-07,
          7.31620965e-07,   7.31620965e-07,   7.31620961e-07,
          5.98896945e-07],
       [  5.98891666e-07,   7.31613353e-07,   7.31613348e-07,
          7.31613350e-07,   7.31613357e-07,   7.31613366e-07,
          7.31613373e-07,   7.31613374e-07,   7.31613370e-07,
          5.98891680e-07],
       [  5.98891654e-07,   7.31613334e-07,   7.31613331e-07,
          7.31613334e-07,   7.31613342e-07,   7.31613351e-07,
          7.31613357e-07,   7.31613358e-07,   7.31613352e-07,
          5.98891669e-07],
       [  5.98891656e-07,   7.31613336e-07,   7.31613338e-07,
          7.31613342e-07,   7.31613350e-07,   7.31613357e-07,
          7.31613361e-07,   7.31613359e-07,   7.31613350e-07,
          5.98891668e-07],
       [  5.98891660e-07,   7.31613340e-07,   7.31613342e-07,
          7.31613346e-07,   7.31613352e-07,   7.31613358e-07,
          7.31613359e-07,   7.31613354e-07,   7.31613345e-07,
          5.98891663e-07],
       [  5.98891661e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613345e-07,   7.31613349e-07,   7.31613352e-07,
          7.31613350e-07,   7.31613345e-07,   7.31613342e-07,
          5.98891661e-07],
       [  5.98891661e-07,   5.98891661e-07,   5.98891661e-07,
          5.98891664e-07,   5.98891667e-07,   5.98891669e-07,
          5.98891668e-07,   5.98891663e-07,   5.98891661e-07,
          5.98891661e-07]]

        np.testing.assert_allclose(hjvec.a, hup, rtol=0, atol = 1e-10)


def test_g_jvecu2():
        g = ThPa2D.FDgrid(nx, nz, ng)
        h = ThPa2D.FDgrid(nx, nz, ng)
        gjvec, hjvec = ThPa2D.adflow(g, h, t, T, u2, k_ad, k_de, Q, ThPa2D.upwind)

        gup = [[ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ,  0.        ,  0.        ,  0.        ,  0.        ],
       [ 0.00023934,  0.00026581,  0.00026581,  0.00026581,  0.00026581,
         0.00026581,  0.00026581,  0.00026581,  0.00026581,  0.00023934],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,
         0.0002664 ,  0.0002664 ,  0.0002664 ,  0.0002664 ,  0.00023982],
       [ 0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982,
         0.00023982,  0.00023982,  0.00023982,  0.00023982,  0.00023982]]

        np.testing.assert_allclose(gjvec.a, gup, rtol=0, atol = 1e-8)

        
def test_h_jvecu2():

        g = ThPa2D.FDgrid(nx, nz, ng)
        h = ThPa2D.FDgrid(nx, nz, ng)
        gjvec, hjvec = ThPa2D.adflow(g, h, t, T, u2, k_ad, k_de, Q, ThPa2D.upwind)

        hup = [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
          0.00000000e+00],
       [  1.19225354e-06,   1.45579433e-06,   1.45579436e-06,
          1.45579436e-06,   1.45579434e-06,   1.45579434e-06,
          1.45579435e-06,   1.45579434e-06,   1.45579434e-06,
          1.19225355e-06],
       [  6.00847947e-07,   7.34217681e-07,   7.34217673e-07,
          7.34217673e-07,   7.34217659e-07,   7.34217659e-07,
          7.34217637e-07,   7.34217659e-07,   7.34217659e-07,
          6.00847930e-07],
       [  5.98896950e-07,   7.31620966e-07,   7.31620964e-07,
          7.31620964e-07,   7.31620955e-07,   7.31620955e-07,
          7.31620943e-07,   7.31620955e-07,   7.31620955e-07,
          5.98896940e-07],
       [  5.98891684e-07,   7.31613374e-07,   7.31613361e-07,
          7.31613361e-07,   7.31613361e-07,   7.31613361e-07,
          7.31613348e-07,   7.31613361e-07,   7.31613361e-07,
          5.98891673e-07],
       [  5.98891672e-07,   7.31613355e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613329e-07,   7.31613342e-07,   7.31613342e-07,
          5.98891661e-07],
       [  5.98891670e-07,   7.31613354e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613336e-07,   7.31613351e-07,   7.31613351e-07,
          5.98891669e-07],
       [  5.98891667e-07,   7.31613349e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613355e-07,   7.31613355e-07,
          5.98891672e-07],
       [  5.98891663e-07,   7.31613344e-07,   7.31613342e-07,
          7.31613342e-07,   7.31613342e-07,   7.31613342e-07,
          7.31613343e-07,   7.31613351e-07,   7.31613351e-07,
          5.98891669e-07],
       [  5.98891663e-07,   5.98891663e-07,   5.98891661e-07,
          5.98891661e-07,   5.98891661e-07,   5.98891661e-07,
          5.98891662e-07,   5.98891669e-07,   5.98891669e-07,
          5.98891669e-07]]

        np.testing.assert_allclose(hjvec.a, hup, rtol=0, atol = 1e-10)



